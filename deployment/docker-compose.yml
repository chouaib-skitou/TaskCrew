version: '3.9'

networks:
  app-network:
    driver: bridge

services:
  frontend:
    build:
      context: ../frontend
    container_name: frontend
    ports:
      - "3000:80" # Expose port 3000 for frontend
    environment:
      - NODE_ENV=production
    depends_on:
      - auth-service
      - user-service
    networks:
      - app-network

  auth-service:
    build:
      context: ../services/auth-service
    container_name: auth-service
    ports:
      - "5000:5000" # Expose port 5000
    environment:
      - NODE_ENV=production
      - USER_SERVICE_URL=http://user-service:5001
    depends_on:
      - user-service
    networks:
      - app-network

  user-service:
    build:
      context: ../services/user-service
    container_name: user-service
    ports:
      - "5001:5001" # Expose port 5001
    environment:
      - NODE_ENV=production
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=users_db
      - DATABASE_URL=postgres://postgres:postgres@user-db:5432/users_db # Changed port to 5432
      - DEV_DATABASE_URL=postgres://postgres:postgres@user-db:5432/users_db # Changed port to 5432
    depends_on:
      - user-db
    networks:
      - app-network

  user-db:
    image: postgres:14
    container_name: user-db
    ports:
      - "5433:5432" # Map local port 5433 to container port 5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=users_db
    volumes:
      - user-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  user-db-data:
